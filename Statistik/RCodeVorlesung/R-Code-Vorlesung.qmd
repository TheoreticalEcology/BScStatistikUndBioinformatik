---
title: "R Code der Vorlesung BSc Statistik und Bioinformatik"
author: "Florian Hartig"
abstract: "Dieses Dokument fasst den in der Vorlesung live vorgeführten R Code zusammen. Wichtig: es handelt sich hier um eine Sammlung von Code, nicht um ein Lehrbuch. Insbesondere kann dieses Dokument die in der Vorlesung gegebene mündliche Erklärung der Motivation / Outputs nicht ersetzen. Bezüglich letztere verweise ich auf Ihre Mitschriften, die Vorlesungsunterlagen und das Skript."
format: 
  html:
    toc: true
editor_options: 
  chunk_output_type: console
---

```{r, echo=F}
set.seed(123)
```

# Woche 1 - Univariate deskriptive Statistik

## Einführung R

```{r}
2+2
sqrt(5)
barplot(c(1,2,3))

var1 = 5
var1 = c(1,2,3)
var2 = factor(c("rot", "gruen", "blau"))

mean(var1)
mean(var2)

dat = data.frame(var1 = var1, var2 = var2)
dat$var1
str(dat)

# das ist ein Kommentar
# Hilfe von Funktionen über ?name oder Maus auf Funktion und F1 drücken
```

## Zentraler Grenzwertsatz

```{r}
x = rlnorm(500)
hist(x, breaks = 50)

y = replicate(2000,mean(rlnorm(2000)))
hist(y, breaks = 50)
```

## Beispiel deskriptive Statistik mit realen Daten

Hier benutzen wir Daten der Passigierliste der Titanic. Die Daten sind im EcoData package enthalten. Um das EcoData package zu installieren, folgen Sie den Anweisungen [hier](https://theoreticalecology.github.io/AdvancedRegressionModels/1A-GettingStarted.html#libraries-that-you-will-need)

```{r}
library(EcoData)

str(titanic)

titanic$pclass = factor(titanic$pclass)
x = table(titanic$pclass)
x
barplot(x)
barplot(x, las = 2, horiz = T, col = c("darkred"))

x = table(titanic$sex)
x
barplot(x)

hist(titanic$age)
hist(titanic$age[titanic$pclass == 3])

mean(titanic$age, na.rm = T)
median(titanic$age, na.rm = T)
var(titanic$age, na.rm = T)
sd(titanic$age, na.rm = T)

quantile(titanic$age, na.rm = T)
boxplot(titanic$age)

# um moments zu installieren tippen Sie install.packages("moments")
library(moments)
skewness(titanic$age, na.rm = T)

```

# Woche 2

## Kategorisch vs kategorisch

```{r}
library(effects)
head(TitanicSurvival)

View(TitanicSurvival)


kreuz = table(TitanicSurvival$sex, TitanicSurvival$passengerClass)
print(kreuz)

barplot(kreuz)
legend("topleft", legend = c("Male", "Female"), col = c("gray", "black"), pch = 15)

kreuz = table(TitanicSurvival$passengerClass, TitanicSurvival$sex)
barplot(kreuz, beside = TRUE)

mosaicplot(kreuz)
```

## Kategorisch vs numerisch

Erinnerung boxplot, auf der X - Achse kategorische Variable

```{r}

boxplot(age~passengerClass, data = TitanicSurvival)

## Mit Notch
boxplot(age~passengerClass, data = TitanicSurvival, notch = TRUE)

par(mar = c(7, 5, 3, 1))
boxplot(age~passengerClass+sex, data = TitanicSurvival, notch = TRUE, las = 2, xlab = "")
```

## Numerisch vs numerisch

```{r}

head(iris)
plot(Sepal.Length~Petal.Length, data = iris)
cor(iris$Sepal.Length, iris$Petal.Length)
cor(iris$Sepal.Length, iris$Petal.Length, method = "spearman")

plot(Sepal.Length~log(Petal.Length), data = iris)
cor(iris$Sepal.Length, log(iris$Petal.Length))
cor(iris$Sepal.Length, log(iris$Petal.Length), method = "spearman")

cor.test(iris$Sepal.Length, iris$Petal.Length, method = "pearson")

```

## PCA

```{r}
pca = prcomp(airquality[complete.cases(airquality),1:4], scale = TRUE)
biplot(pca)
```

# Woche 3

Daten vorbereiten - wie man das Package "Ecodata" mit den Daten installiert wurde in Woche 1 erklärt

```{r}
library(EcoData) 
# str(titanic)

titanic$pclass = factor(titanic$pclass, labels = c("1.Kl", "2.Kl", "3.Kl"))
titanic$sex = factor(titanic$sex)
titanic$embarked = factor(titanic$embarked)
titanic$survived = factor(titanic$survived, labels = c("died", "survived"))
```

## Tests auf Kreuztabellen (kat+kat)

Kreuztabelle berechnen und visualisieren

```{r}
x = table(titanic$survived, titanic$sex)
x
barplot(x, beside = T)
```

Wenn mindestens eine der Variablen binär ist kann man den prop.test machen

```{r}
prop.test(x)
```

Ansonsten Chi2 Test

```{r}
chisq.test(x)
```

## Tests auf Unterschiede im Mittelwert von 2 Gruppen (kat + num)

Wir schauen uns an die Altersunterschiede zwischen Geschlechtern

```{r}
boxplot(age ~ sex, data = titanic, notch = T)
```

Sind die beiden Gruppen normalverteilt?

```{r}
shapiro.test(titanic$age[titanic$sex == "female"])
hist(titanic$age[titanic$sex == "female"])
shapiro.test(titanic$age[titanic$sex != "female"])
```

Nein, also machen wir den nichtparametrischen Mann-Whitney U test, der in R mit der Funktion wilcox.test berechnet wird

```{r}
wilcox.test(titanic$age[titanic$sex == "female"],
            titanic$age[titanic$sex == "male"])
```

Gerade noch signifikant. Mit weniger Daten (= weniger Power) würde das Ergebnis n.s.

```{r}
titanic2 = titanic[sample.int(nrow(titanic), 300), ]

wilcox.test(titanic$age[titanic2$sex == "female"],
            titanic$age[titanic2$sex == "male"])
```

Hier als Beispiel noch mal das gleiche mit einem t-Test, den wir aber aufgrund des signifikanten Shapiro tests (H0 = Normalverteilung) eigentlich nicht anwenden sollten

```{r}
t.test(titanic$age[titanic$sex == "female"],
            titanic$age[titanic$sex == "male"])
```

## Tests auf Korrelation (num + num)

Als letztes schauen wir uns Tests auf Korrelation an. Hierzu benutzen wir den Datensatz plantHeight im Package ecodata, und schauen auf die Korrelation zwischen Temperatur und Pflanzengröße.

```{r}
#str(plantHeight)
plot(loght ~ temp, data = plantHeight)
```

Pearson (lineare) Korrelation

```{r}
cor.test(plantHeight$loght, plantHeight$temp)
```

Würden Sie erwarten, dass sich die Werte ändern, wenn wir auf einen Rangkorrelationskoeffizienten wechseln? Probieren wir es aus!

```{r}
cor.test(plantHeight$loght, plantHeight$temp, method = "spearman")
```

# Woche 4

Laden der Daten, zur Installation des Package "EcoData" siehe Woche 1.

```{r}
library(EcoData)
plantHeight$growthform2 = relevel(as.factor(plantHeight$growthform), "Tree")
```

## Numerische erklärende Variable

Beziehung Höhe gegen Temperatur

```{r}
plot(loght ~ temp, data = plantHeight)
```

Fit lineare Regression

```{r}
fit <- lm(loght ~ temp, data = plantHeight)
summary(fit)
```

Visualisierung

```{r}
library(effects)
plot(allEffects(fit))
plot(allEffects(fit, partial.residuals = T))
```

## Kategoriale erklärende Variable

```{r}
plot(loght ~ growthform2, data = plantHeight, las = 2)

fit = lm(loght ~ growthform2, data = plantHeight)
summary(fit)
```

## Residuenanalyse

Hier exemplarisch nur für das erste Modell

```{r}
fit <- lm(loght ~ temp, data = plantHeight)
par(mfrow = c(2,2))
plot(fit)

plot(allEffects(fit, partial.residuals = T))
```

## Ausblick

Was wenn Temperatur und Wuchsform beide einen Effekt haben? Visuell sehen wir das hier

```{r}
plot(loght ~ temp, data = plantHeight, col = as.numeric(plantHeight$growthform2))
```

Wie man diese multiple Regression fittet, besprechen wir nächste Woche!

# Woche 5

```{r}
library(EcoData)

#str(titanic)
titanic$fSex = factor(titanic$sex)
titanic$fPclass = factor(titanic$pclass)
```

```{r}
boxplot(age ~ fSex, data = titanic, notch = T)

fit = lm(age ~ sex, data = titanic)
summary(fit)
```

Multiple Regression

```{r}
fit = lm(age ~ sex + fPclass , data = titanic)
summary(fit)

library(effects)
plot(allEffects(fit))

```

Mit Interaktion

```{r}
fit = lm(age ~ sex * fPclass , data = titanic)
summary(fit)

library(effects)
plot(allEffects(fit))
```

Beispiel kontinuierlich

```{r}
plot(loght ~ lat  , data = plantHeight)
plot(loght ~ NPP  , data = plantHeight)

fit <- lm(loght ~ lat  , data = plantHeight)
summary(fit)

fit <- lm(loght ~ lat + NPP + temp , data = plantHeight)
summary(fit)
```

## Modellselection

### ANOVA

```{r}
summary(aov(fit))
```

Vorsicht! Reihenfolge macht einen Unterschied

```{r}
fit <- lm(loght ~ NPP + temp + lat, data = plantHeight)
summary(aov(fit))
```

### AIC

```{r}
m1 <- lm(loght ~ NPP + temp , data = plantHeight)
m2 <- lm(loght ~ NPP + temp + lat , data = plantHeight)
AIC(m1)
AIC(m2)
```

# Woche 6

# Woche 7
